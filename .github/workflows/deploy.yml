name: Build & Deploy Hexo to Pages

on:
  push:
    branches: [ main ]   # 你的源码分支

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Get baseURL and set CNAME env
        run: |
          set -eo pipefail
          # 从 _config.yml 读取 url:，去掉引号/协议/末尾斜杠，得到裸域名
          baseURL=$(grep -E '^[[:space:]]*url:' _config.yml \
            | head -1 \
            | cut -d':' -f2- \
            | xargs \
            | tr -d '"' \
            | tr -d "'" \
            | sed -E 's~^https?://~~; s~/*$~~')
          echo "Detected baseURL: $baseURL"
          if [ -n "$baseURL" ]; then
            echo "CNAME=$baseURL" >> "$GITHUB_ENV"
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # 以后仓库里有 package-lock.json 再打开缓存：
          # cache: 'npm'

      - name: Install & Build (Hexo)
        run: |
          npm install -g hexo-cli
          npm install
          hexo clean
          hexo generate
          # 有自定义域名时把 CNAME 写进构建产物
          if [[ -n "${CNAME}" && "${CNAME}" != *"github.io"* ]]; then
            echo "${CNAME}" > public/CNAME
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
